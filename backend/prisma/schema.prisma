// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 更新后的MemberAlias模型，基于DDL
model MemberAlias {
  id         BigInt    @id @default(autoincrement())
  groupId    BigInt    @map("group_id")
  qqAccount  BigInt    @map("qq_account")
  alias      Json?
  createdAt  DateTime? @default(now()) @map("created_at") @db.DateTime(3)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.DateTime(3)
  deletedAt  DateTime? @map("deleted_at") @db.DateTime(3)

  @@map("member_alias")
}

// 新增AiRole模型
model AiRole {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  qqAccount  BigInt?   @map("qq_account")
  qqNickname String?   @map("qq_nickname") @db.LongText
  groupId    BigInt?   @map("group_id")
  groupName  String?   @map("group_name") @db.LongText
  setting    String?   @db.LongText
  createdAt  DateTime? @default(now()) @map("created_at") @db.DateTime(3)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.DateTime(3)
  deletedAt  DateTime? @map("deleted_at") @db.DateTime(3)

  @@unique([qqAccount, groupId], map: "idx_ai_role_qq_account_group_id")
  @@index([deletedAt], map: "idx_ai_role_deleted_at")
  @@map("ai_role")
}

// 新增DynamicTriggerModel模型
model DynamicTriggerModel {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  triggerType         String?   @map("trigger_type") @db.LongText
  conditionType       String?   @map("condition_type") @db.LongText
  conditionValue      String?   @map("condition_value") @db.LongText
  triggerContentType  String?   @map("trigger_content_type") @db.LongText
  triggerContent      String?   @map("trigger_content") @db.LongText
  sequence            BigInt?
  scene               String?   @db.VarChar(20)
  description         String?   @db.LongText
  createdAt           DateTime? @default(now()) @map("created_at") @db.DateTime(3)
  updatedAt           DateTime? @updatedAt @map("updated_at") @db.DateTime(3)
  deletedAt           DateTime? @map("deleted_at") @db.DateTime(3)

  @@index([deletedAt], map: "idx_dynamic_trigger_models_deleted_at")
  @@map("dynamic_trigger_models")
}

// 新增MessageCount模型
model MessageCount {
  id        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  groupId   String?   @map("group_id") @db.LongText
  quantity  BigInt?
  createdAt DateTime? @default(now()) @map("created_at") @db.DateTime(3)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(3)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(3)

  @@index([deletedAt], map: "idx_message_count_deleted_at")
  @@map("message_count")
}

// 新增MessageRecord模型
model MessageRecord {
  id          BigInt    @id @default(autoincrement())
  qqAccount   BigInt    @map("qq_account")
  qqNickname  String?   @map("qq_nickname") @db.LongText
  groupId     BigInt    @map("group_id")
  groupName   String?   @map("group_name") @db.LongText
  message     String?   @db.LongText
  messageType String?   @map("message_type") @db.LongText
  createdAt   DateTime? @default(now()) @map("created_at") @db.DateTime(3)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.DateTime(3)
  deletedAt   DateTime? @map("deleted_at") @db.DateTime(3)

  @@index([deletedAt], map: "idx_message_record_deleted_at")
  @@map("message_record")
} 